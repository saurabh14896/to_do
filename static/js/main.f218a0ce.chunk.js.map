{"version":3,"sources":["logo.svg","assignment.js","App.js","reportWebVitals.js","index.js"],"names":["Assignment","useState","name","setName","inputs","setInputs","handleChangeInput","index","event","values","target","value","handleChangeCheck","checked","handleRemoveFields","splice","Container","style","marginTop","Typography","variant","align","Divider","paddingTop","marginBottom","paddingBottom","background","Grid","spacing","container","justify","item","md","xs","TextField","fullWidth","onChange","IconButton","onClick","language","check","disable","fontSize","color","map","input","Checkbox","disabled","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f218a0ce.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nfunction Assignment() {\r\n  const [name,setName] = useState(null);\r\n  const [inputs, setInputs] = useState([]);\r\n \r\n  const handleChangeInput = (index, event) => {\r\n    const values =[...inputs];\r\n    values[index][event.target.name]=event.target.value;\r\n    setInputs(values);\r\n  }\r\n  const handleChangeCheck = (index, event) => {\r\n    const values =[...inputs];\r\n    values[index][event.target.name]=event.target.checked;\r\n    setInputs(values);\r\n  }\r\n\r\n  const handleAddFields = () => {\r\n    if(name){\r\n    setInputs([...inputs, { language: name, check: false, disable:false},])\r\n    setName(\"\");\r\n  } \r\n  }\r\n\r\n  const handleRemoveFields = (index) => {\r\n    const values  = [...inputs];\r\n    values.splice(index, 1);\r\n    setInputs(values);\r\n  }\r\n  return (\r\n    <Container style={{marginTop:50}}>\r\n      <Typography variant=\"h5\" align=\"center\"><b>Add Item</b></Typography>\r\n        <Divider style={{paddingTop: 2,marginBottom: 20,paddingBottom: 2,background:'#000000',}}/>\r\n      <form>\r\n            <Grid spacing={1} container justify=\"center\">\r\n                <Grid item md={11} xs={10}>\r\n                    <TextField\r\n                    name=\"lang\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    value={name}\r\n                    onChange={event => setName(event.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item md={1} xs={1}>\r\n                    <IconButton\r\n                        \r\n                        onClick={handleAddFields}\r\n                        >\r\n                    <AddIcon fontSize=\"large\" style={{color:'#000000'}}/>\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n<br/>\r\n<Typography variant=\"h5\" align=\"center\"><b>Todo</b></Typography>\r\n        <Divider style={{paddingTop: 2,paddingBottom: 2,background:'#000000',}}/><br/>\r\n{ inputs.map((input,index) => (\r\n          <div key={index}>\r\n              {!input.check ?\r\n              <Grid spacing={1} container>\r\n                  <Grid item md={1} xs={1} style={{marginTop:10}}>\r\n                  <Checkbox checked={input.check} name=\"check\"\r\n                   onChange={event => handleChangeCheck(index, event)} />\r\n                  </Grid>\r\n                <Grid item md={6} xs={6}>\r\n                    {input.disable?\r\n                            <TextField\r\n                            name=\"language\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            value={input.language}\r\n                            onChange={event => handleChangeInput(index, event)}\r\n                            />          :\r\n                        <Typography variant=\"subtitle1\" style={{marginTop:15}}>\r\n                            {input.language}</Typography>}\r\n                </Grid>\r\n                <Grid item md={1} xs={1}>\r\n                    <IconButton disabled={input.length === 1} onClick={() => handleRemoveFields(index)}>\r\n                    <RemoveIcon/>\r\n                    </IconButton>\r\n                </Grid>\r\n                <Grid item md={1} xs={1}>\r\n                    <IconButton \r\n                     name=\"disable\"  \r\n                     onClick={() => {\r\n                        const values = [...inputs];\r\n                            if(input.disable){\r\n                                values[index][`disable`]=false}\r\n                            else{\r\n                                values[index][`disable`]=true}\r\n                        setInputs(values);}}\r\n                    >\r\n                    <EditIcon color={input.disable ?\"secondary\":\"inherit\"}/>\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>:null}\r\n          </div>\r\n        )) }\r\n<br/>\r\n    <Typography variant=\"h5\" align=\"center\"><b>Completed</b></Typography>\r\n        <Divider style={{paddingTop: 2,paddingBottom: 2,background:'#000000',}}/>\r\n        <br/>\r\n{ inputs.map((input,index) => (\r\n          <div key={index}>\r\n              {input.check ?\r\n              <Grid spacing={1} container>\r\n              <Grid item md={1} xs={1} style={{marginTop:10}}>\r\n              <Checkbox checked={input.check} name=\"check\"\r\n               onChange={event => handleChangeCheck(index, event)} />\r\n              </Grid>\r\n            <Grid item md={6} xs={6}>\r\n                {input.disable?\r\n                        <TextField\r\n                        name=\"language\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={input.language}\r\n                        onChange={event => handleChangeInput(index, event)}\r\n                        />          :\r\n                    <Typography variant=\"subtitle1\" style={{marginTop:15}}>\r\n                        <del>{input.language}</del></Typography>}\r\n            </Grid>\r\n            <Grid item md={1} xs={1}>\r\n                <IconButton disabled={input.length === 1} onClick={() => handleRemoveFields(index)}>\r\n                <RemoveIcon/>\r\n                </IconButton>\r\n            </Grid>\r\n            <Grid item md={1} xs={1}>\r\n                <IconButton \r\n                 name=\"disable\"  \r\n                 onClick={() => {\r\n                    const values = [...inputs];\r\n                        if(input.disable){\r\n                            values[index][`disable`]=false}\r\n                        else{\r\n                            values[index][`disable`]=true}\r\n                    setInputs(values);}}\r\n                >\r\n                <EditIcon color={input.disable ?\"secondary\":\"inherit\"}/>\r\n                </IconButton>\r\n            </Grid>\r\n        </Grid>:null}\r\n          </div>\r\n        )) }\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Assignment;","import logo from './logo.svg';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Assignment from './assignment';\n\nfunction App() {\n  return (\n    <div>\n      <Grid spacing={1} container justify=\"center\">\n        <Grid item md={5} xs={12}>\n          <Assignment/>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}